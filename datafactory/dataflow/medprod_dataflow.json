{
	"name": "medprod_dataflow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "dt_sink_avro",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "cast1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          id_medidas as string,",
				"          id_pozo as string,",
				"          id_run as string,",
				"          TEST_DATE as string,",
				"          BFPD as string,",
				"          BOPD as string,",
				"          WC as string,",
				"          BWPD as string,",
				"          API as string,",
				"          TP as string,",
				"          CP as string,",
				"          WHT as string,",
				"          GOR as string,",
				"          DHA as string,",
				"          Cl as string,",
				"          FL as string,",
				"          BRPD as string,",
				"          TDH as string,",
				"          PI as string,",
				"          PWF as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 select(mapColumn(",
				"          id_medidas,",
				"          id_pozo,",
				"          id_run,",
				"          TEST_DATE,",
				"          BFPD,",
				"          BOPD,",
				"          WC,",
				"          BWPD,",
				"          API,",
				"          TP,",
				"          CP,",
				"          WHT,",
				"          GOR,",
				"          DHA,",
				"          Cl,",
				"          FL,",
				"          BRPD,",
				"          TDH,",
				"          PI,",
				"          PWF",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 cast(output(",
				"          id_medidas as integer,",
				"          id_pozo as integer,",
				"          id_run as integer,",
				"          TEST_DATE as date,",
				"          BFPD as double,",
				"          BOPD as double,",
				"          WC as double,",
				"          BWPD as double,",
				"          API as double,",
				"          TP as double,",
				"          CP as double,",
				"          WHT as double,",
				"          GOR as double,",
				"          DHA as double,",
				"          Cl as double,",
				"          FL as double,",
				"          BRPD as double,",
				"          TDH as double,",
				"          PI as double,",
				"          PWF as double",
				"     ),",
				"     errors: true) ~> cast1"
			]
		}
	}
}